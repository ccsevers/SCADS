ENTITY user
{
	string name,
	string password,
	string email,
	string profileData
	PRIMARY(name)
}

ENTITY thought
{
	int timestamp,
	string thought,
  FOREIGN KEY owner REF user
	PRIMARY(owner, timestamp)
}

ENTITY subscription
{
  FOREIGN KEY owner REF user MAX 5000,
  FOREIGN KEY target REF user,
	bool approved
	PRIMARY(owner, target)
}

ENTITY atReference
{
  FOREIGN KEY referent REF user,
  FOREIGN KEY referringThought REF thought MAX 10
  PRIMARY(referent, referringThought)
}

ENTITY hashTag
{
	string name,
  FOREIGN KEY referringThought REF thought MAX 10
	PRIMARY(name, referringThought)
}

QUERY myThoughts
FETCH thought
	OF user BY owner
WHERE user=[this]
LIMIT [1: numperpage] MAX 10

QUERY thoughtsByHashTag
FETCH thought OF hashTag BY referringThought
WHERE name=[1:name]
ORDER BY timestamp LIMIT [2:count] MAX 100

// These are people that I am following
// NOT people that are following me
QUERY myFollowing
FETCH user
	OF subscription BY target
	OF user me BY owner
WHERE me=[this]
LIMIT [1:numperpage] MAX 30

QUERY thoughtstream
FETCH thought
	OF user friend BY owner
	OF subscription BY target
	OF user me BY owner
WHERE me=[this] AND subscription.approved = true
ORDER BY timestamp
LIMIT [1:count] MAX 100

// these are people that reference me in their thoughts
QUERY myReferences
FETCH thought
    OF atReference BY referringThought
    OF user BY referent
WHERE user=[this]
LIMIT 10 MAX 10

QUERY needsApproval
FETCH subscription
	OF user BY target
WHERE user = [this] AND subscription.approved = false
LIMIT [1: count] MAX 100

QUERY userByName
FETCH user
WHERE user.name = [1:name]

QUERY userByEmail
FETCH user
WHERE email = [1:email]
LIMIT 10 MAX 10

QUERY finduserByPK
FETCH user
WHERE name = [1:name]

/* Missing Queries */
//Who's following me?
//How many people are following me?
//How many people am I following?
//How many tweets do I have?
